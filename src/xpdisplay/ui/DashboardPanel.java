/*
 * Copyright (c) Duncan Jauncey 2013.   Free for non-commercial use.
 */

package xpdisplay.ui;

import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import xpdisplay.model.StateChangeListener;
import xpdisplay.model.data.Attitude;
import xpdisplay.model.data.DataObject;
import xpdisplay.model.data.Position;
import xpdisplay.model.data.Speed;

import javax.swing.*;

public class DashboardPanel extends javax.swing.JPanel implements StateChangeListener {
    
    private long timeUpdated = 0;
    private static boolean running = true;
    
    public DashboardPanel() {
        initComponents();
        
        Thread t = new Thread() {
            public void run() {
                TimeZone gmt = TimeZone.getTimeZone("GMT");
                
                while(running) {
                    long now = System.currentTimeMillis();
                    if( now - timeUpdated > 500 ) {
                        Calendar cal = new GregorianCalendar(gmt);
                        int hour24 = cal.get(Calendar.HOUR_OF_DAY);
                        int minutes = cal.get(Calendar.MINUTE);      // 0..59
                        int seconds = cal.get(Calendar.SECOND);      // 0..59
                        String time = "";
                        
                        if( hour24 < 10 ) {
                            time += "0";
                        }
                        time += hour24;
                        
                        time += ":";
                        if( minutes < 10 ) {
                            time += "0";
                        }
                        time += minutes;
                        
                        time += ":";
                        if( seconds < 10 ) {
                            time += "0";
                        }
                        time += seconds;
                        
                        timeLabel.setText(time+" GMT");
                        timeUpdated = now;
                    }
                    try {
                        sleep(250);
                    } catch (InterruptedException e) {
                    }
                }
            }
        };
        t.start();
    }
    
    public void finalize() {
        running = false;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        altitudeLabel = new AaLabel();
        jPanel2 = new javax.swing.JPanel();
        airspeedLabel = new AaLabel();
        jPanel3 = new javax.swing.JPanel();
        headingLabel = new AaLabel();
        compassPanel = new CompassPanel();
        jPanel4 = new javax.swing.JPanel();
        pitchLabel = new AaLabel();
        jPanel5 = new javax.swing.JPanel();
        rollLabel = new AaLabel();
        jPanel6 = new javax.swing.JPanel();
        verticalVelocityLabel = new AaLabel();
        jPanel7 = new javax.swing.JPanel();
        timeLabel = new AaLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Altitude (above ground level)"));
        altitudeLabel.setFont(new java.awt.Font("Arial", 1, 36));
        altitudeLabel.setForeground(new java.awt.Color(153, 153, 153));
        altitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        altitudeLabel.setText("alt");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(altitudeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(altitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Airspeed"));
        airspeedLabel.setFont(new java.awt.Font("Arial", 1, 36));
        airspeedLabel.setForeground(new java.awt.Color(153, 153, 153));
        airspeedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        airspeedLabel.setText("airspeed");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(airspeedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(airspeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Heading (true)"));
        headingLabel.setFont(new java.awt.Font("Arial", 1, 36));
        headingLabel.setForeground(new java.awt.Color(153, 153, 153));
        headingLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        headingLabel.setText("hdg");

        javax.swing.GroupLayout compassPanelLayout = new javax.swing.GroupLayout(compassPanel);
        compassPanel.setLayout(compassPanelLayout);
        compassPanelLayout.setHorizontalGroup(
            compassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 61, Short.MAX_VALUE)
        );
        compassPanelLayout.setVerticalGroup(
            compassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(compassPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(headingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(compassPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(headingLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                    .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Pitch"));
        pitchLabel.setFont(new java.awt.Font("Arial", 1, 36));
        pitchLabel.setForeground(new java.awt.Color(153, 153, 153));
        pitchLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pitchLabel.setText("pitch");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pitchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(pitchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Roll"));
        rollLabel.setFont(new java.awt.Font("Arial", 1, 36));
        rollLabel.setForeground(new java.awt.Color(153, 153, 153));
        rollLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rollLabel.setText("roll");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(rollLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(rollLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Vertical Velocity"));
        verticalVelocityLabel.setFont(new java.awt.Font("Arial", 1, 36));
        verticalVelocityLabel.setForeground(new java.awt.Color(153, 153, 153));
        verticalVelocityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        verticalVelocityLabel.setText("vert");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(verticalVelocityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(verticalVelocityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Time"));
        timeLabel.setFont(new java.awt.Font("Arial", 1, 36));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("time");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                    .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                    .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGap(182, 182, 182))
        );

        layout.linkSize(SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel1, jPanel2, jPanel3, jPanel4, jPanel5, jPanel6});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(9, 9, 9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(49, Short.MAX_VALUE))
        );

        layout.linkSize(SwingConstants.VERTICAL, new java.awt.Component[] {jPanel1, jPanel2, jPanel3, jPanel4, jPanel5, jPanel6});

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel airspeedLabel;
    private javax.swing.JLabel altitudeLabel;
    private javax.swing.JPanel compassPanel;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel pitchLabel;
    private javax.swing.JLabel rollLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel verticalVelocityLabel;
    // End of variables declaration//GEN-END:variables

    public void notifyStateChanged(DataObject objectThatWasChanged) {       
        if( objectThatWasChanged instanceof Position ) {
            Position p = (Position) objectThatWasChanged;
            Float alt = p.getAltitudeInFeetAboveGroundLevel();
            if( alt != null ) {
                int v = (int)alt.floatValue();
                if( v < 100 ) {
                    altitudeLabel.setForeground(Color.PINK);
                } else
                if( v < 500 ) {
                    altitudeLabel.setForeground(Color.RED);
                } else
                if( v < 1000 ) {
                    altitudeLabel.setForeground(Color.ORANGE);
                } else
                if( v < 2000 ) {
                    altitudeLabel.setForeground(Color.YELLOW);
                } else
                if( v < 3000 ) {
                    altitudeLabel.setForeground(Color.BLUE);
                } else
                if( v < 5000 ) {
                    altitudeLabel.setForeground(Color.GREEN);
                } else {
                    altitudeLabel.setForeground(Color.BLACK);
                }
                altitudeLabel.setText(""+v+" ft");
            }
            return;
        }
        
        if( objectThatWasChanged instanceof Speed ) {
            Speed s = (Speed) objectThatWasChanged;
            if( s.getVIndKts() != null ) {
                int v = (int)s.getVIndKts().floatValue();
                if( v < 150 ) {
                    airspeedLabel.setForeground(Color.ORANGE);
                } else
                if( v < 200 ) {
                    airspeedLabel.setForeground(Color.BLUE);
                } else {
                    airspeedLabel.setForeground(Color.BLACK);
                }
                airspeedLabel.setText(""+v+" kts");
            }
            
            if( s.getVviFpm() != null ) {
                int v = (int)s.getVviFpm().floatValue();
                if( v < -200 ) {
                    verticalVelocityLabel.setForeground(Color.RED);
                } else
                if( v < -100 ) {
                    verticalVelocityLabel.setForeground(Color.ORANGE);
                } else
                if( v > 100 ) {
                    verticalVelocityLabel.setForeground(Color.BLUE);
                } else
                if( v > 200 ) {
                    verticalVelocityLabel.setForeground(Color.CYAN);
                } else {
                    verticalVelocityLabel.setForeground(Color.BLACK);
                }
                verticalVelocityLabel.setText(""+v+" fpm");
            }
            return;
        }
        
        if( objectThatWasChanged instanceof Attitude ) {
            Attitude a = (Attitude) objectThatWasChanged;
            if( a.getHeadingTrue() != null ) {
                int v = (int) a.getHeadingTrue().floatValue();
                ((CompassPanel)compassPanel).setAngle(v);
                headingLabel.setForeground(Color.BLACK);
                headingLabel.setText(""+v);
            }
            
            if( a.getPitch() != null ) {
                int v = (int) a.getPitch().floatValue();
                pitchLabel.setForeground(Color.BLACK);
                pitchLabel.setText(""+v);
            }

            if( a.getRoll() != null ) {
                int v = (int) a.getRoll().floatValue();
                rollLabel.setForeground(Color.BLACK);
                rollLabel.setText(""+v);
            }
        }
        
    }
    
}
